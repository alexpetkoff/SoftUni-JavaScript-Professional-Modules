{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    reset(state) {\n      state.counter = 0;\n    },\n    toggleCounter(state, action) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {},\n    logout(state) {}\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;\n\n// BELOW IS THE CODE FOR OLD WAY OF USING REDUX\n\n// const counterReducer = (state = initialState, action) => {\n//     if (action.type === \"increment\") {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter,\n//         };\n//     }\n\n//     if (action.type === \"increase\") {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter,\n//         };\n//     }\n\n//     if (action.type === \"decrement\") {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter,\n//         };\n//     }\n\n//     if (action.type === \"reset\") {\n//         return {\n//             counter: 0,\n//             showCounter: state.showCounter,\n//         };\n//     }\n\n//     if (action.type === \"toggle\") {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter,\n//         };\n//     }\n\n//     return state;\n// };","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","reset","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","counterActions","actions"],"sources":["C:/Users/Anni/Desktop/SoftUni/SoftUni-JavaScript-Professional-Modules/Diving into React Redux + Toolkit/Redux Counter/src/store/store.jsx"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: \"counter\",\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        reset(state) {\r\n            state.counter = 0;\r\n        },\r\n        toggleCounter(state, action) {\r\n            state.showCounter = !state.showCounter;\r\n        },\r\n    },\r\n});\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: \"authentication\",\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state) {},\r\n        logout(state) {},\r\n    },\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer,\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n\r\n// BELOW IS THE CODE FOR OLD WAY OF USING REDUX\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if (action.type === \"increment\") {\r\n//         return {\r\n//             counter: state.counter + 1,\r\n//             showCounter: state.showCounter,\r\n//         };\r\n//     }\r\n\r\n//     if (action.type === \"increase\") {\r\n//         return {\r\n//             counter: state.counter + action.amount,\r\n//             showCounter: state.showCounter,\r\n//         };\r\n//     }\r\n\r\n//     if (action.type === \"decrement\") {\r\n//         return {\r\n//             counter: state.counter - 1,\r\n//             showCounter: state.showCounter,\r\n//         };\r\n//     }\r\n\r\n//     if (action.type === \"reset\") {\r\n//         return {\r\n//             counter: 0,\r\n//             showCounter: state.showCounter,\r\n//         };\r\n//     }\r\n\r\n//     if (action.type === \"toggle\") {\r\n//         return {\r\n//             counter: state.counter,\r\n//             showCounter: !state.showCounter,\r\n//         };\r\n//     }\r\n\r\n//     return state;\r\n// };\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,KAAKA,CAACL,KAAK,EAAE;MACTA,KAAK,CAACP,OAAO,GAAG,CAAC;IACrB,CAAC;IACDa,aAAaA,CAACN,KAAK,EAAEG,MAAM,EAAE;MACzBH,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMa,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC1BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEU,gBAAgB;EAC9BT,QAAQ,EAAE;IACNY,KAAKA,CAACV,KAAK,EAAE,CAAC,CAAC;IACfW,MAAMA,CAACX,KAAK,EAAE,CAAC;EACnB;AACJ,CAAC,CAAC;AAEF,MAAMY,KAAK,GAAGrB,cAAc,CAAC;EACzBsB,OAAO,EAAElB,YAAY,CAACkB;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAElD,eAAeH,KAAK;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}